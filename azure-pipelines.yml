# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  CONTAINER_NAME:  unityci/editor:2021.3.0f1-android-1 
  BUILD_NAME: car-collision-comparsion
  UNITY_ACTIVATION_FILE: ./unity3d.alf
  IMAGE: unityci/editor # https://hub.docker.com/r/unityci/editor
  IMAGE_VERSION: 1 # This will automatically use latest v1.x.x, see https://github.com/game-ci/docker/releases
  UNITY_DIR: $(Build.Repository.LocalPath) # this needs to be an absolute path. Defaults to the root of your tree.
  # You can expose this in Unity via Application.version
  VERSION_NUMBER_VAR: $CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID-$CI_JOB_ID
  VERSION_BUILD_VAR: $CI_PIPELINE_IID

stages:
- stage: 'Prepare'
  displayName: 'Prepare'
  jobs:
  - job: 'get_unity_version_job'
    container:  ubuntu:latest
    steps:                
    - bash: echo "##vso[task.setvariable variable=UNITY_VERSION;isOutput=true]$(cat $UNITY_DIR/ProjectSettings/ProjectVersion.txt | grep "m_EditorVersion:.*" | awk '{ print $2}')"
      name: get_unity_version_step    
    - script: echo get_unity_version_step $(get_unity_version_step.UNITY_VERSION)
- stage: 'BuildAndroid'
  displayName: 'Build an android apk'
  dependsOn: 'Prepare'
  #condition: ne(stageDependencies.Prepare.get_unity_version_job.outputs['get_unity_version_step.UNITY_VERSION'], '') 
  jobs:
  - job: 'Android'
    variables:
      UNITY_VERSION: $[ stageDependencies.Prepare.get_unity_version_job.outputs['get_unity_version_step.UNITY_VERSION'] ]  
    container: ubuntu:latest
    steps:
    - script: echo unitystuff from Android stage $(unitystuff.UNITY_VERSION)
    - script: echo VERSION from Android stage $(UNITY_VERSION)
    
    